<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><!--
 Archive processed by SingleFile 
 url: https://informatics.msk.ru/moodle/mod/statements/print3.php?id=33283 
 saved date: Wed Aug 08 2018 21:54:38 GMT+0300 (MSK) 
--><meta charset=utf-8>
<title>Параллель B. Графы 3</title>
<style>.problem-statement{margin:.5em;font-family:verdana;line-height:1.5em;font-size:14px}.problem-statement p{margin:0 0 1em}.problem-statement .legend{margin-bottom:1em}.problem-statement .section-title{font-family:arial;font-size:115%;font-weight:bold}.problem-statement .output-specification{margin-bottom:1em}.problem-statement .sample-tests .input,.problem-statement .sample-tests .output{border:1px solid #888}.problem-statement .sample-tests .output{margin-bottom:1em;position:relative;top:-1px}.problem-statement .sample-tests pre{line-height:1.25em;padding:.25em;margin:0;background-color:#efefef}.problem-statement .sample-tests .title{font-family:arial;padding:.25em;border-bottom:1px solid #888;text-transform:lowercase;font-weight:bold}.problem-statement .tex-span{font-size:125%;font-family:"times new roman"}</style>
<meta http-equiv=Content-Type content="text/html; charset=utf-8">
<meta http-equiv=Content-Type content="text/html; charset=">
<meta name=description content="Параллель B. Графы 3">
<style>h1,h2,h3,h4,h5,h6{margin-left:0;font-family:"Times New Roman",Times,serif;break-after:avoid;break-inside:avoid}.statements_title{margin-left:-40px;font-family:Tahoma,Verdana,Arial,Helvetica,sans-serif;font-size:3em;font-weight:bold;margin-top:120px;margin-bottom:30px;text-align:center}.statements_summary{margin-left:-40px;text-align:center;margin-bottom:120px}.statements_chapter_title{font-family:Tahoma,Verdana,Arial,Helvetica,sans-serif;text-align:left;font-size:1.7em;font-weight:bold;border-style:solid;border-width:0 0 1px;margin-left:0;margin-bottom:20px}.statements_chapter{break-before:page}body{margin-left:50px;margin-right:10px;color:#000;background-color:#fff;font-family:"Times New Roman",Times,serif;font-size:1em;font-weight:normal;text-decoration:none}font{color:#000;background-color:#eee;font-family:"Times New Roman",Times,serif;font-size:1em;font-weight:normal;text-decoration:none}.typeset{font-family:serif;font-style:normal;font-weight:normal;line-height:normal;text-indent:0}span.typeset{text-align:left}.typeset span{text-align:left;border:0;margin:0;padding:0}.typeset .blank{display:inline-block;overflow:hidden;border:0 none;width:0;height:0}.typeset .spacer{display:inline-block}#jsMath_message{position:fixed;bottom:1px;left:2px;background-color:#e6e6e6;border:1px solid #959595;margin:0;padding:1px 8px;z-index:102;color:black;font-size:small;width:auto}#jsMath_button{position:fixed;bottom:1px;right:2px;background-color:white;border:1px solid #959595;margin:0;padding:0 3px 1px;z-index:102;color:black;text-decoration:none;font-size:x-small;width:auto;cursor:pointer}#jsMath_button *{padding:0;border:0;margin:0;line-height:normal;font-size:inherit;font-style:inherit;font-family:inherit}@media print{#jsMath_button{display:none}}.typeset .scale{font-size:120%}.typeset .icmmi10{font-family:serif;font-style:italic}</style><link type=image/x-icon rel="shortcut icon" href=data:image/x-icon;base64,></head> <body><div id=jsMath_message style="visibility: hidden;">Processing Math: Done</div><div id=jsMath_button title=" Open jsMath Control Panel "><span onclick=jsMath.Controls.Panel()>jsMath</span></div><div style="position: fixed; bottom: 1px; left: 2px; background-color: rgb(230, 230, 230); border: 1px solid rgb(149, 149, 149); margin: 0px; padding: 1px 8px; z-index: 102; color: black; font-size: 75%; width: auto; visibility: hidden;"></div> <a name=top></a> <p class=statements_title>Параллель B. Графы 3</p> <p class=statements_summary></p>  <div class=statements_toc_alpha><a name=toc></a><p class=statements_chapter_title>Список задач<ul><li><a href=#ch3494><b>Задача A.</b> Алгоритм Дейкстры за <span class=typeset><nobr><span class=scale><span class=icmmi10>Mlo</span><span class=icmmi10>g</span><span class=spacer style=margin-left:0.035em></span><span class=icmmi10>N</span><span class=spacer style=margin-left:0.109em></span></span></nobr></span></a><li><a href=#ch6><b>Задача B.</b> Дейкстра: восстановление пути</a><li><a href=#ch169><b>Задача C.</b> Заправки</a><li><a href=#ch1967><b>Задача D.</b> Транспортировка</a></ul></div><hr><div class=statements_chapter><h1><a name=ch3494>Алгоритм Дейкстры за <span class=typeset><nobr><span class=scale><span style=position:relative;><span style="position:absolute; top:0em; left:0em;"><span class=icmmi10>Mlo</span><span class=icmmi10>g</span><span class=spacer style=margin-left:0.035em></span><span class=icmmi10>N</span><span class=spacer style=margin-left:0.109em></span> </span><span class=blank style=width:2.916em;height:0.937em;></span></span><span class=blank style=height:1.040em;vertical-align:-0.25em></span></span></nobr></span></a></h1><p class=statements_chapter_title><b>Задача A.</b> Алгоритм Дейкстры за <span class=typeset><nobr><span class=scale><span style=position:relative;><span style="position:absolute; top:0em; left:0em;"><span class=icmmi10>Mlo</span><span class=icmmi10>g</span><span class=spacer style=margin-left:0.035em></span><span class=icmmi10>N</span><span class=spacer style=margin-left:0.109em></span> </span><span class=blank style=width:2.911em;height:0.919em;></span></span><span class=blank style=height:1.040em;vertical-align:-0.25em></span></span></nobr></span><div class=problem-statement><div class=legend><p>Напишите программу, которая будет находить расстояния в неориентированном взвешенном графе с неотрицательными длинами ребер, от указанной вершины до всех остальных. Программа должна работать быстро для больших разреженных графов.</p></div><p><div class=input-specification><div class=section-title>Входные данные</div><p>В первой строке входных данных задано число NUM — количество различных запусков алгоритма Дейкстры (на разных графах). Далее следуют NUM блоков, каждый из которых имеет следующую структуру.<p>Первая строка блока содержит два числа <span class=tex-span><i>N</i></span> и <span class=tex-span><i>M</i></span>, разделенные пробелом — количество вершин и количество ребер графа. Далее следуют <span class=tex-span><i>M</i></span> строк, каждая из которых содержит по три целых числа, разделенные пробелами. Первые два из них в пределах от 0 до <span class=tex-span><i>N</i></span>–1 каждое и обозначают концы соответствующего ребра, третье — в пределах от 0 до 20000 и обозначает длину этого ребра. Далее, в последней строке блока, записанное единственное число от 0 до <span class=tex-span><i>N</i></span>–1 — вершина, расстояния от которой надо искать.<p>Количество различных графов в одном тесте NUM не превышает 5. Количество вершин не превышает 60000, рёбер — 200000.</p></div><p><div class=output-specification><div class=section-title>Выходные данные</div><p>Выведите на стандартный выход (экран) NUM строк, в каждой из которых по <span class=tex-span><i>N</i><sub class=lower-index><i>i</i></sub></span> чисел, разделенных пробелами — расстояния от указанной начальной вершины взвешенного неориентированного графа до его 0-й, 1-й, 2-й и т. д. вершин (допускается лишний пробел после последнего числа). Если некоторая вершина недостижима от указанной начальной, вместо расстояния выводите число 2009000999 (гарантировано, что все реальные расстояния меньше).</p></div><p> <div class=note><div class=section-title>Примечание</div><p>Убедитесь, что программа правильно учитывает, что за один запуск следует обработать несколько различных графов.</p></div></div> <div class=problem-statement><div class=sample-tests><div class=section-title>Примеры</div><div class=sample-test><div class=input><div class=title>Входные данные</div><pre class=content>1
5 7
1 2 5
1 3 2
2 3 4
2 4 3
3 4 6
0 3 20
0 4 10
1
</pre></div><div class=output><div class=title>Выходные данные</div><pre class=content>18 0 5 2 8 
</pre></div></div></div></div></div><hr><div class=statements_chapter><h1><a name=ch6>Дейкстра: восстановление пути</a></h1><p class=statements_chapter_title><b>Задача B.</b> Дейкстра: восстановление пути<div class=problem-statement> <div class=legend> <p> Дан ориентированный взвешенный граф. Найдите кратчайший путь от одной заданной вершины до другой. </p> </div> <div class=input-specification> <div class=section-title> Входные данные </div> <p> В первой строке содержатся три числа: <em>N</em>, <em>S</em> и <em>F</em> (1<span style="font-size: 12pt">≤</span><font face="Arial, sans-serif"><font style="font-size: 11pt" size=2><em>N<font face="Symbol, serif"><span lang=en-US></span></font></em></font></font><span style="font-size: 12pt">≤</span><font face="Arial, sans-serif"><font style="font-size: 11pt" size=2><font face="Symbol, serif"><span lang=en-US></span></font>100, 1<font face="Symbol, serif"><span lang=en-US></span></font></font></font><span style="font-size: 12pt">≤</span><font face="Arial, sans-serif"><font style="font-size: 11pt" size=2><font face="Symbol, serif"><span lang=en-US></span></font><em>S</em>, <em>F</em></font></font><span style="font-size: 12pt">≤</span><font face="Arial, sans-serif"><font style="font-size: 11pt" size=2><font face="Symbol, serif"><span lang=en-US></span></font><em>N</em>), где <em>N</em> – количество вершин графа, <em>S</em> – начальная вершина, а <em>F –</em> конечная. В следующих <em>N</em> строках вводится по <em>N</em> чисел, не превосходящих 100, – матрица смежности графа, где -1 означает отсутствие ребра между вершинами, а любое неотрицательное число – присутствие ребра данного веса. На главной диагонали матрицы записаны нули. </font></font></p><font face="Arial, sans-serif"><font style="font-size: 11pt" size=2> </font></font></div><font face="Arial, sans-serif"><font style="font-size: 11pt" size=2> <div class=output-specification> <div class=section-title> Выходные данные </div> <p> Требуется вывести последовательно все вершины одного (любого) из кратчайших путей, или одно число <font face="courier new,courier,monospace">-1</font>, если пути между указанными вершинами не существует. <b>Пример выходного файла ниже неправильный. Правильный пример, скорее всего, <code>2 3 1</code></b>. </p> </div> </font></font></div><font face="Arial, sans-serif"><font style="font-size: 11pt" size=2>
<div class=problem-statement><div class=sample-tests><div class=section-title>Примеры</div><div class=sample-test><div class=input><div class=title>Входные данные</div><pre class=content>3 2 1
0 1 1
4 0 1
2 1 0
</pre></div><div class=output><div class=title>Выходные данные</div><pre class=content>3
</pre></div></div></div></div></font></font></div><hr><div class=statements_chapter><h1><font face="Arial, sans-serif"><font style="font-size: 11pt" size=2><a name=ch169>Заправки</a></font></font></h1><p class=statements_chapter_title><font face="Arial, sans-serif"><font style="font-size: 11pt" size=2><b>Задача C.</b> Заправки</font></font><div class=problem-statement><font face="Arial, sans-serif"><font style="font-size: 11pt" size=2> <div class=legend> <p>В стране <em>N</em> городов, некоторые из которых соединены между собой дорогами. Для того, чтобы проехать по одной дороге, требуется один бак бензина. В каждом городе бак бензина имеет разную стоимость. Вам требуется добраться из первого города в <em>N</em>-ый, потратив как можно меньшее количество денег.</p> </div> <div class=input-specification> <div class=section-title> Входные данные </div> <p>В первой сроке вводится число <em>N</em> (1<=<em>N</em><=100), в следующей идет <em>N</em> чисел, <em>i</em>-ое из которых задает стоимость бензина в <em>i</em>-ом городе (все числа целые из диапазона от 0 до 100). Затем идет число <em>M</em> – количество дорог в стране, далее идет описание самих дорог. Каждая дорога задается двумя числами – номерами городов, которые она соединяет. Все дороги двухсторонние (то есть по ним можно ездить как в одну, так и в другую сторону); между двумя городами всегда существует не более одной дороги; не существует дорог, ведущих из города в себя.</p> </div> <div class=output-specification> <div class=section-title> Выходные данные </div> <p>Требеутся вывести одно число – суммарную стоимость маршрута или <font face="courier new,courier,monospace">-1</font>, если добраться невозможно.</p> </div> </font></font></div><font face="Arial, sans-serif"><font style="font-size: 11pt" size=2> <div class=problem-statement><div class=sample-tests><div class=section-title>Примеры</div><div class=sample-test><div class=input><div class=title>Входные данные</div><pre class=content>5
3 6 1 7 6 
8
1 2
5 4
5 1
3 4
5 2
2 4
2 3
3 1</pre></div><div class=output><div class=title>Выходные данные</div><pre class=content>3</pre></div></div></div></div></font></font></div><hr><div class=statements_chapter><h1><font face="Arial, sans-serif"><font style="font-size: 11pt" size=2><a name=ch1967>Транспортировка</a></font></font></h1><p class=statements_chapter_title><font face="Arial, sans-serif"><font style="font-size: 11pt" size=2><b>Задача D.</b> Транспортировка</font></font><div class=problem-statement><font face="Arial, sans-serif"><font style="font-size: 11pt" size=2> <div class=legend> <p>К очередной Летней компьютерной школе было решено подготовить кружки как для школьников, так и для всех преподавателей.<p>Имея привычку делать важные дела в самый последний момент, дизайнер закончил работу над макетом за два дня до начала школы. Ещё день уйдёт у завода-изготовителя на то, чтобы изготовить кружки и нанести на них изображение. На то, чтобы довезти кружки от завода-изготовителя до ЛКШ, остаётся всего 24 часа.</p> <p>Заказ на 10000000 экземпляров кружек (а именно столько заказали организаторы), конечно же, за один рейс не увезти. Однако, за первый рейс хочется привезти максимальное количество кружек. Для перевозки был заказан один большегрузный автомобиль. Но есть один нюанс: на некоторых дорогах установлено ограничение на вес автомобиля. Поэтому если автомобиль нагрузить кружками под завязку, то, возможно, не удастся воспользоваться самым коротким маршрутом, а придётся ехать в объезд. Может случиться даже так, что из-за этого грузовик не успеет доехать до лагеря вовремя, а этого допустить никак нельзя. Итак, сколько же кружек можно погрузить в автомобиль, чтобы успеть привезти этот ценный груз вовремя, и не нарушая правил дорожного движения?</p> </div> <div class=input-specification> <div class=section-title> Входные данные </div> <p>В первой строке находятся числа n (1≤n≤500) и m - количество узловых пунктов дорожной схемы и количество дорог, соответственно. В следующих m строках находится информация о дорогах. Каждая дорога описывается в отдельной строке следующим образом. Сначала указаны номера узловых пунктов, которые соединяются данной дорогой, потом время, которое тратится на проезд по этой дороге, и, наконец, максимальный вес автомобиля, которому разрешено ехать по этой дороге. Известно, что все дороги соединяют различные пункты, причем для каждой пары пунктов есть не более одной дороги, непосредственно их соединяющей. Все числа разделены одним или несколькими пробелами. <p>Узловые пункты нумеруются числами от 1 до n. При этом завод по производству кружек имеет номер 1, а ЛКШ - номер n. Время проезда по дороге задано в минутах и не превосходит 1440 (24 часа). Ограничение на массу задано в граммах и не превосходит одного миллиарда. Кроме того, известно, что одна кружка весит 100 грамм, а пустой грузовик - 3 тонны.</p> </div> <div class=output-specification> <div class=section-title> Выходные данные </div> <p>Выведите одно число - максимальное количество кружек, которое можно привезти за первый рейс, потратив не более 24часов.</p> </div> </font></font></div><font face="Arial, sans-serif"><font style="font-size: 11pt" size=2>
<div class=problem-statement><div class=sample-tests><div class=section-title>Примеры</div><div class=sample-test><div class=input><div class=title>Входные данные</div><pre class=content>3 3
1 2 10 3000220
2 3 20 3000201
1 3 1 3000099
</pre></div><div class=output><div class=title>Выходные данные</div><pre class=content>2
</pre></div></div></div></div></font></font></div><font face="Arial, sans-serif"><font style="font-size: 11pt" size=2> </font></font><autoscroll></autoscroll>