#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

int main() {
    int n, max_mass;
    cin >> n >> max_mass;
    vector<int> mass(n), cost(n);
    vector<vector<int>> dp(n, vector<int>(max_mass + 1, 0));
    for (int i = 0; i < n; i++) {
        cin >> mass[i];
    }
    for (int i = 0; i < n; i++) {
        cin >> cost[i];
    }
    dp[0][mass[0]] = cost[0];
    for (int i = 1; i < n; i++) {
        for (int j = 0; j <= max_mass; j++) {
            dp[i][j] = dp[i - 1][j];
            if ((j - mass[i] >= 0) && (dp[i - 1][j - mass[i]] + cost[i] > dp[i - 1][j])) {
                dp[i][j] = dp[i - 1][j - mass[i]] + cost[i];
            }
        }
    }
    int ans = 0;
    for (int i = 0; i <= max_mass; i++) {
        if (dp[n - 1][i] > ans) {
            ans = dp[n - 1][i];
        }
    }
    cout << ans;
}
