Content-type: text/xml

<?xml version="1.0" encoding="utf-8"?>
<testing-report run-id="59" judge-id="5" status="OK" scoring="ACM" run-tests="30" contest-id="3000" real-time-available="yes" max-memory-used-available="yes" correct-available="yes" time-limit-ms="2000" real-time-limit-ms="5000" marked-flag="no" >
  <uuid>23ac7e12-b50d-4e86-a5ba-d1f041a30584</uuid>
  <host>localhost.localdomain</host>
  <cpu-model>Intel(R) Pentium(R) CPU 3550M @ 2.30GHz</cpu-model>
  <cpu-mhz>2294.738</cpu-mhz>
  <compiler_output>
</compiler_output>
  <tests>
    <test num="1" status="OK" time="1" real-time="2" max-memory-used="311296"  checker-comment="OK" >
  <program-stats-str>{ utime=0, stime=1, ptime=1, rtime=2, maxvsz=311296, maxrss=3174400, nvcsw=1, nivcsw=1 }</program-stats-str>
  <checker-stats-str>{ utime=0, stime=0, ptime=0, rtime=1, maxvsz=307200, maxrss=2387968, nvcsw=1, nivcsw=1 }</checker-stats-str>
      <input size="16">6 2
1 1 2 2 1 1
</input>
      <output size="5">3 5 6</output>
      <correct size="6">3 5 6
</correct>
      <stderr size="0"></stderr>
      <checker size="3">OK
</checker>
    </test>
    <test num="2" status="OK" time="1" real-time="2" max-memory-used="311296"  checker-comment="OK" >
  <program-stats-str>{ utime=0, stime=1, ptime=1, rtime=2, maxvsz=311296, maxrss=2813952, nvcsw=1, nivcsw=1 }</program-stats-str>
  <checker-stats-str>{ utime=0, stime=0, ptime=0, rtime=1, maxvsz=307200, maxrss=2387968, nvcsw=1, nivcsw=1 }</checker-stats-str>
      <input size="9">1 239
57
</input>
      <output size="1">1</output>
      <correct size="2">1
</correct>
      <stderr size="0"></stderr>
      <checker size="3">OK
</checker>
    </test>
    <test num="3" status="OK" time="1" real-time="2" max-memory-used="311296"  checker-comment="OK" >
  <program-stats-str>{ utime=0, stime=1, ptime=1, rtime=2, maxvsz=311296, maxrss=3026944, nvcsw=1, nivcsw=1 }</program-stats-str>
  <checker-stats-str>{ utime=0, stime=0, ptime=0, rtime=2, maxvsz=307200, maxrss=2387968, nvcsw=1, nivcsw=2 }</checker-stats-str>
      <input size="12">2 239
23 97
</input>
      <output size="1">2</output>
      <correct size="2">2
</correct>
      <stderr size="0"></stderr>
      <checker size="3">OK
</checker>
    </test>
    <test num="4" status="OK" time="1" real-time="3" max-memory-used="311296"  checker-comment="OK" >
  <program-stats-str>{ utime=1, stime=0, ptime=1, rtime=3, maxvsz=311296, maxrss=3026944, nvcsw=1, nivcsw=2 }</program-stats-str>
  <checker-stats-str>{ utime=0, stime=0, ptime=0, rtime=2, maxvsz=307200, maxrss=2387968, nvcsw=1, nivcsw=1 }</checker-stats-str>
      <input size="12">2 317
57 57
</input>
      <output size="3">1 2</output>
      <correct size="4">1 2
</correct>
      <stderr size="0"></stderr>
      <checker size="3">OK
</checker>
    </test>
    <test num="5" status="OK" time="1" real-time="2" max-memory-used="311296"  checker-comment="OK" >
  <program-stats-str>{ utime=0, stime=1, ptime=1, rtime=2, maxvsz=311296, maxrss=2805760, nvcsw=1, nivcsw=1 }</program-stats-str>
  <checker-stats-str>{ utime=0, stime=0, ptime=0, rtime=2, maxvsz=307200, maxrss=2387968, nvcsw=1, nivcsw=1 }</checker-stats-str>
      <input size="11">3 20
7 7 7
</input>
      <output size="3">2 3</output>
      <correct size="4">2 3
</correct>
      <stderr size="0"></stderr>
      <checker size="3">OK
</checker>
    </test>
    <test num="6" status="OK" time="1" real-time="2" max-memory-used="311296"  checker-comment="OK" >
  <program-stats-str>{ utime=0, stime=1, ptime=1, rtime=2, maxvsz=311296, maxrss=2809856, nvcsw=1, nivcsw=1 }</program-stats-str>
  <checker-stats-str>{ utime=0, stime=0, ptime=0, rtime=2, maxvsz=307200, maxrss=2387968, nvcsw=1, nivcsw=2 }</checker-stats-str>
      <input size="11">3 30
7 9 9
</input>
      <output size="1">3</output>
      <correct size="2">3
</correct>
      <stderr size="0"></stderr>
      <checker size="3">OK
</checker>
    </test>
    <test num="7" status="OK" time="1" real-time="3" max-memory-used="311296"  checker-comment="OK" >
  <program-stats-str>{ utime=0, stime=1, ptime=1, rtime=3, maxvsz=311296, maxrss=2809856, nvcsw=1, nivcsw=1 }</program-stats-str>
  <checker-stats-str>{ utime=0, stime=0, ptime=0, rtime=2, maxvsz=307200, maxrss=2387968, nvcsw=1, nivcsw=1 }</checker-stats-str>
      <input size="11">3 30
9 7 9
</input>
      <output size="1">3</output>
      <correct size="2">3
</correct>
      <stderr size="0"></stderr>
      <checker size="3">OK
</checker>
    </test>
    <test num="8" status="OK" time="1" real-time="2" max-memory-used="311296"  checker-comment="OK" >
  <program-stats-str>{ utime=0, stime=1, ptime=1, rtime=2, maxvsz=311296, maxrss=2859008, nvcsw=1, nivcsw=1 }</program-stats-str>
  <checker-stats-str>{ utime=0, stime=0, ptime=0, rtime=1, maxvsz=307200, maxrss=2387968, nvcsw=1, nivcsw=1 }</checker-stats-str>
      <input size="11">3 30
9 9 7
</input>
      <output size="3">2 3</output>
      <correct size="4">2 3
</correct>
      <stderr size="0"></stderr>
      <checker size="3">OK
</checker>
    </test>
    <test num="9" status="OK" time="1" real-time="2" max-memory-used="311296"  checker-comment="OK" >
  <program-stats-str>{ utime=0, stime=1, ptime=1, rtime=2, maxvsz=311296, maxrss=2965504, nvcsw=1, nivcsw=1 }</program-stats-str>
  <checker-stats-str>{ utime=0, stime=0, ptime=0, rtime=2, maxvsz=307200, maxrss=2387968, nvcsw=1, nivcsw=2 }</checker-stats-str>
      <input size="11">3 29
1 2 3
</input>
      <output size="1">3</output>
      <correct size="2">3
</correct>
      <stderr size="0"></stderr>
      <checker size="3">OK
</checker>
    </test>
    <test num="10" status="OK" time="1" real-time="2" max-memory-used="311296"  checker-comment="OK" >
  <program-stats-str>{ utime=0, stime=1, ptime=1, rtime=2, maxvsz=311296, maxrss=2879488, nvcsw=1, nivcsw=1 }</program-stats-str>
  <checker-stats-str>{ utime=0, stime=0, ptime=0, rtime=1, maxvsz=307200, maxrss=2387968, nvcsw=1, nivcsw=1 }</checker-stats-str>
      <input size="14">4 117
1 2 1 2
</input>
      <output size="1">4</output>
      <correct size="2">4
</correct>
      <stderr size="0"></stderr>
      <checker size="3">OK
</checker>
    </test>
    <test num="11" status="OK" time="1" real-time="3" max-memory-used="311296"  checker-comment="OK" >
  <program-stats-str>{ utime=0, stime=1, ptime=1, rtime=3, maxvsz=311296, maxrss=2809856, nvcsw=1, nivcsw=1 }</program-stats-str>
  <checker-stats-str>{ utime=0, stime=0, ptime=0, rtime=2, maxvsz=307200, maxrss=2387968, nvcsw=1, nivcsw=1 }</checker-stats-str>
      <input size="308">100 239
17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17
</input>
      <output size="153">50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100</output>
      <correct size="154">50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100
</correct>
      <stderr size="0"></stderr>
      <checker size="3">OK
</checker>
    </test>
    <test num="12" status="OK" time="1" real-time="2" max-memory-used="311296"  checker-comment="OK" >
  <program-stats-str>{ utime=0, stime=1, ptime=1, rtime=2, maxvsz=311296, maxrss=2932736, nvcsw=1, nivcsw=1 }</program-stats-str>
  <checker-stats-str>{ utime=0, stime=0, ptime=0, rtime=2, maxvsz=307200, maxrss=2387968, nvcsw=1, nivcsw=2 }</checker-stats-str>
      <input size="208">100 100
1 2 1 3 1 2 1 4 1 2 1 3 1 2 1 5 1 2 1 3 1 2 1 4 1 2 1 3 1 2 1 6 1 2 1 3 1 2 1 4 1 2 1 3 1 2 1 5 1 2 1 3 1 2 1 4 1 2 1 3 1 2 1 7 1 2 1 3 1 2 1 4 1 2 1 3 1 2 1 5 1 2 1 3 1 2 1 4 1 2 1 3 1 2 1 6 1 2 1 3
</input>
      <output size="3">100</output>
      <correct size="4">100
</correct>
      <stderr size="0"></stderr>
      <checker size="3">OK
</checker>
    </test>
    <test num="13" status="OK" time="2" real-time="3" max-memory-used="311296"  checker-comment="OK" >
  <program-stats-str>{ utime=0, stime=2, ptime=2, rtime=3, maxvsz=311296, maxrss=2940928, nvcsw=1, nivcsw=1 }</program-stats-str>
  <checker-stats-str>{ utime=0, stime=0, ptime=0, rtime=1, maxvsz=307200, maxrss=2387968, nvcsw=1, nivcsw=1 }</checker-stats-str>
      <input size="2485">1239 2
1 2 2 1 2 1 1 2 2 1 1 2 1 2 2 1 2 1 1 2 1 2 2 1 1 2 2 1 2 1 1 2 2 1 1 2 1 2 2 1 1 2 2 1 2 1 1 2 1 2 2 1 2 1 1 2 2 1 1 2 1 2 2 1 2 1 1 2 1 2 2 1 1 2 2 1 2 1 1 2 1 2 2 1 2 1 1 2 2 1 1 2 1 2 2 1 1 2 2 1 2 1 1 2 2 1 1 2 1 2 2 1 2 1 1 2 1 2 2 1 1 2 2 1 2 1 1 2 2 1 1 2 1 2 2 1 1 2 2 1 2 1 1 2 1 2 2 1 2 1 1 2 2 1 1 2 1 2 2 1 1 2 2 1 2 1 1 2 2 1 1 2 1 2 2 1 2 1 1 2 1 2 2 1 1 2 2 1 2 1 1 2 1 2 2 1 2 1 1 2 2 1 1 2 1 2 2 1 2 1 1 2 1 2 2 1 1 2 2 1 2 1 1 2 2 1 1 2 1 2 2 1 1 2 2 1 2 1 1 2 1 2 2 1 2 1 1 2 2 1 1 2 1 2 2 1 2 1 1 2 1 2 2 1 1 2 2 1 2 1 1 2 1 2 2 1 2 1 1 2 2 1 1 2 1 2 2 1 1 2 2 1 2 1 1 2 2 1 1 2 1 2 2 1 2 1 1 2 1 2 2 1 1 2 2 1 2 1 1 2 1 2 2 1 2 1 1 2 2 1 1 2 1 2 2 1 2 1 1 2 1 2 2 1 1 2 2 1 2 1 1 2 2 1 1 2 1 2 2 1 1 2 2 1 2 1 1 2 1 2 2 1 2 1 1 2 2 1 1 2 1 2 2 1 1 2 2 1 2 1 1 2 2 1 1 2 1 2 2 1 2 1 1 2 1 2 2 1 1 2 2 1 2 1 1 2 2 1 1 2 1 2 2 1 1 2 2 1 2 1 1 2 1 2 2 1 2 1 1 2 2 1 1 2 1 2 2 1 2 1 1 2 1 2 2 1 1 2 2 1 2 1 1 2 1 2 2 1 2 1 1 2 2 1 1 2 1 2 2 1 1 2 2 1 2 1 1 2 2 1 1 2 1 2 2 1 2 1 1 2 1 2 2 1 1 2 2 1 2 1 1 2 2 1 1 2 1 2 2 1 1 2 2 1 2 1 1 2 1 2 2 1 2 1 1 2 2 1 1 2 1 2 2 1 1 2 2 1 2 1 1 2 2 1 1 2 1 2 2 1 2 1 1 2 1 2 2 1 1 2 2 1 2 1 1 2 1 2 2 1 2 1 1 2 2 1 1 2 1 2 2 1 2 1 1 2 1 2 2 1 1 2 2 1 2 1 1 2 2 1 1 2 1 2 2 1 1 2 2 1 2 1 1 2 1 2 2 1 2 1 1 2 2 1 1 2 1 2 2 1 1 2 2 1 2 1 1 2 2 1 1 2 1 2 2 1 2 1 1 2 1 2 2 1 1 2 2 1 2 1 1 2 2 1 1 2 1 2 2 1 1 2 2 1 2 1 1 2 1 2 2 1 2 1 1 2 2 1 1 2 1 2 2 1 2 1 1 2 1 2 2 1 1 2 2 1 2 1 1 2 1 2 2 1 2 1 1 2 2 1 1 2 1 2 2 1 1 2 2 1 2 1 1 2 2 1 1 2 1 2 2 1 2 1 1 2 1 2 2 1 1 2 2 1 2 1 1 2 1 2 2 1 2 1 1 2 2 1 1 2 1 2 2 1 2 1 1 2 1 2 2 1 1 2 2 1 2 1 1 2 2 1 1 2 1 2 2 1 1 2 2 1 2 1 1 2 1 2 2 1 2 1 1 2 2 1 1 2 1 2 2 1 2 1 1 2 1 2 2 1 1 2 2 1 2 1 1 2 1 2 2 1 2 1 1 2 2 1 1 2 1 2 2 1 1 2 2 1 2 1 1 2 2 1 1 2 1 2 2 1 2 1 1 2 1 2 2 1 1 2 2 1 2 1 1 2 2 1 1 2 1 2 2 1 1 2 2 1 2 1 1 2 1 2 2 1 2 1 1 2 2 1 1 2 1 2 2 1 1 2 2 1 2 1 1 2 2 1 1 2 1 2 2 1 2 1 1 2 1 2 2 1 1 2 2 1 2 1 1 2 1 2 2 1 2 1 1 2 2 1 1 2 1 2 2 1 2 1 1 2 1 2 2 1 1 2 2 1 2 1 1 2 2 1 1 2 1 2 2 1 1 2 2 1 2 1 1 2 1 2 2 1 2 1 1 2 2 1 1 2 1 2 2 1 2 1 1 2 1 2 2 1 1 2 2 1 2 1 1 2 1 2 2 1 2 1 1 2 2 1 1 2 1 2 2 1 1 2 2 1 2 1 1 2 2 1 1 2 1 2 2 1 2 1 1 2 1 2 2 1 1 2 2 1 2 1 1 2 1 2 2 1 2 1 1 2 2 1 1 2 1 2 2 1 2 1 1 2 1 2 2 1 1 2 2 1 2 1 1 2 2 1 1 2 1 2 2 1 1 2 2 1 2 1 1 2 1 2 2 1 2 1 1 2 2 1 1 2 1 2 2 1 1 2 2 1 2 1 1 2 2 1 1 2 1 2 2 1 2 1 1 2 1 2 2 1 1 2 2 1 2 1 1 2 2 1 1 2 1 2 2 1 1 2 2 1 2 1 1 2 1 2 2 1 2 1 1 2 2 1 1 2 1 2 2 1 2 1 1 2 1 2 2 1 1 2 2 1 2 1 1 2 1 2 2 1 2 1 1
</input>
      <output size="28">727 1111 1207 1231 1237 1239</output>
      <correct size="29">727 1111 1207 1231 1237 1239
</correct>
      <stderr size="0"></stderr>
      <checker size="3">OK
</checker>
    </test>
    <test num="14" status="OK" time="1" real-time="2" max-memory-used="311296"  checker-comment="OK" >
  <program-stats-str>{ utime=0, stime=1, ptime=1, rtime=2, maxvsz=311296, maxrss=2818048, nvcsw=1, nivcsw=1 }</program-stats-str>
  <checker-stats-str>{ utime=0, stime=0, ptime=0, rtime=2, maxvsz=307200, maxrss=2387968, nvcsw=1, nivcsw=1 }</checker-stats-str>
      <input size="408">200 100
1 1 2 2 1 1 3 3 1 1 2 2 1 1 4 4 1 1 2 2 1 1 3 3 1 1 2 2 1 1 5 5 1 1 2 2 1 1 3 3 1 1 2 2 1 1 4 4 1 1 2 2 1 1 3 3 1 1 2 2 1 1 6 6 1 1 2 2 1 1 3 3 1 1 2 2 1 1 4 4 1 1 2 2 1 1 3 3 1 1 2 2 1 1 5 5 1 1 2 2 1 1 3 3 1 1 2 2 1 1 4 4 1 1 2 2 1 1 3 3 1 1 2 2 1 1 7 7 1 1 2 2 1 1 3 3 1 1 2 2 1 1 4 4 1 1 2 2 1 1 3 3 1 1 2 2 1 1 5 5 1 1 2 2 1 1 3 3 1 1 2 2 1 1 4 4 1 1 2 2 1 1 3 3 1 1 2 2 1 1 6 6 1 1 2 2 1 1 3 3
</input>
      <output size="27">137 169 185 193 197 199 200</output>
      <correct size="28">137 169 185 193 197 199 200
</correct>
      <stderr size="0"></stderr>
      <checker size="3">OK
</checker>
    </test>
    <test num="15" status="OK" time="1" real-time="4" max-memory-used="311296"  checker-comment="OK" >
  <program-stats-str>{ utime=1, stime=0, ptime=1, rtime=4, maxvsz=311296, maxrss=2920448, nvcsw=1, nivcsw=2 }</program-stats-str>
  <checker-stats-str>{ utime=0, stime=1, ptime=1, rtime=2, maxvsz=307200, maxrss=2387968, nvcsw=1, nivcsw=3 }</checker-stats-str>
      <input size="964">239 333

</input>
      <output size="23">230 235 236 237 238 239</output>
      <correct size="24">230 235 236 237 238 239
</correct>
      <stderr size="0"></stderr>
      <checker size="3">OK
</checker>
    </test>
    <test num="16" status="OK" time="65" real-time="69" max-memory-used="311296"  checker-comment="OK" >
  <program-stats-str>{ utime=61, stime=4, ptime=65, rtime=69, maxvsz=311296, maxrss=7299072, nvcsw=1, nivcsw=7 }</program-stats-str>
  <checker-stats-str>{ utime=0, stime=0, ptime=0, rtime=1, maxvsz=307200, maxrss=2387968, nvcsw=1, nivcsw=1 }</checker-stats-str>
      <input too-big="yes" original-size="588744" />
      <output size="30">50000 96667 99108 99582 100000</output>
      <correct size="31">50000 96667 99108 99582 100000
</correct>
      <stderr size="0"></stderr>
      <checker size="3">OK
</checker>
    </test>
    <test num="17" status="OK" time="63" real-time="67" max-memory-used="311296"  checker-comment="OK" >
  <program-stats-str>{ utime=63, stime=0, ptime=63, rtime=67, maxvsz=311296, maxrss=7335936, nvcsw=1, nivcsw=7 }</program-stats-str>
  <checker-stats-str>{ utime=0, stime=0, ptime=0, rtime=1, maxvsz=307200, maxrss=2387968, nvcsw=1, nivcsw=1 }</checker-stats-str>
      <input too-big="yes" original-size="588618" />
      <output size="12">75000 100000</output>
      <correct size="13">75000 100000
</correct>
      <stderr size="0"></stderr>
      <checker size="3">OK
</checker>
    </test>
    <test num="18" status="OK" time="63" real-time="67" max-memory-used="311296"  checker-comment="OK" >
  <program-stats-str>{ utime=63, stime=0, ptime=63, rtime=67, maxvsz=311296, maxrss=7360512, nvcsw=1, nivcsw=6 }</program-stats-str>
  <checker-stats-str>{ utime=0, stime=0, ptime=0, rtime=1, maxvsz=307200, maxrss=2387968, nvcsw=1, nivcsw=1 }</checker-stats-str>
      <input too-big="yes" original-size="588618" />
      <output size="12">75000 100000</output>
      <correct size="13">75000 100000
</correct>
      <stderr size="0"></stderr>
      <checker size="3">OK
</checker>
    </test>
    <test num="19" status="OK" time="63" real-time="66" max-memory-used="311296"  checker-comment="OK" >
  <program-stats-str>{ utime=63, stime=0, ptime=63, rtime=66, maxvsz=311296, maxrss=7319552, nvcsw=1, nivcsw=9 }</program-stats-str>
  <checker-stats-str>{ utime=0, stime=0, ptime=0, rtime=1, maxvsz=307200, maxrss=2387968, nvcsw=1, nivcsw=2 }</checker-stats-str>
      <input too-big="yes" original-size="588618" />
      <output size="12">75000 100000</output>
      <correct size="13">75000 100000
</correct>
      <stderr size="0"></stderr>
      <checker size="3">OK
</checker>
    </test>
    <test num="20" status="OK" time="67" real-time="71" max-memory-used="311296"  checker-comment="OK" >
  <program-stats-str>{ utime=67, stime=0, ptime=67, rtime=71, maxvsz=311296, maxrss=7430144, nvcsw=1, nivcsw=8 }</program-stats-str>
  <checker-stats-str>{ utime=9, stime=0, ptime=9, rtime=11, maxvsz=307200, maxrss=2387968, nvcsw=1, nivcsw=2 }</checker-stats-str>
      <input too-big="yes" original-size="592621" />
      <output too-big="yes" original-size="98310" />
      <correct too-big="yes" original-size="98311" />
      <stderr size="0"></stderr>
      <checker size="3">OK
</checker>
    </test>
    <test num="21" status="OK" time="66" real-time="71" max-memory-used="311296"  checker-comment="OK" >
  <program-stats-str>{ utime=66, stime=0, ptime=66, rtime=71, maxvsz=311296, maxrss=7340032, nvcsw=1, nivcsw=6 }</program-stats-str>
  <checker-stats-str>{ utime=8, stime=0, ptime=8, rtime=10, maxvsz=307200, maxrss=2387968, nvcsw=1, nivcsw=3 }</checker-stats-str>
      <input too-big="yes" original-size="596161" />
      <output too-big="yes" original-size="98316" />
      <correct too-big="yes" original-size="98317" />
      <stderr size="0"></stderr>
      <checker size="3">OK
</checker>
    </test>
    <test num="22" status="OK" time="59" real-time="61" max-memory-used="311296"  checker-comment="OK" >
  <program-stats-str>{ utime=54, stime=5, ptime=59, rtime=61, maxvsz=311296, maxrss=7299072, nvcsw=1, nivcsw=6 }</program-stats-str>
  <checker-stats-str>{ utime=26, stime=0, ptime=26, rtime=29, maxvsz=307200, maxrss=2387968, nvcsw=1, nivcsw=6 }</checker-stats-str>
      <input too-big="yes" original-size="300011" />
      <output too-big="yes" original-size="300006" />
      <correct too-big="yes" original-size="300007" />
      <stderr size="0"></stderr>
      <checker size="3">OK
</checker>
    </test>
    <test num="23" status="OK" time="64" real-time="67" max-memory-used="311296"  checker-comment="OK" >
  <program-stats-str>{ utime=59, stime=5, ptime=64, rtime=67, maxvsz=311296, maxrss=7299072, nvcsw=1, nivcsw=8 }</program-stats-str>
  <checker-stats-str>{ utime=0, stime=0, ptime=0, rtime=1, maxvsz=307200, maxrss=2387968, nvcsw=1, nivcsw=1 }</checker-stats-str>
      <input too-big="yes" original-size="588878" />
      <output size="102">50000 53125 56250 59375 62500 65625 68750 71875 75000 78125 81250 84375 87500 90625 93750 96875 100000</output>
      <correct size="103">50000 53125 56250 59375 62500 65625 68750 71875 75000 78125 81250 84375 87500 90625 93750 96875 100000
</correct>
      <stderr size="0"></stderr>
      <checker size="3">OK
</checker>
    </test>
    <test num="24" status="OK" time="9" real-time="11" max-memory-used="311296"  checker-comment="OK" >
  <program-stats-str>{ utime=7, stime=2, ptime=9, rtime=11, maxvsz=311296, maxrss=3301376, nvcsw=1, nivcsw=6 }</program-stats-str>
  <checker-stats-str>{ utime=0, stime=1, ptime=1, rtime=2, maxvsz=307200, maxrss=2387968, nvcsw=1, nivcsw=1 }</checker-stats-str>
      <input too-big="yes" original-size="72024" />
      <output sizeoutput>
      <correct size
</correct>
      <stderr size="0"></stderr>
      <checker size="3">OK
</checker>
    </test>
    <test num="25" status="OK" time="57" real-time="64" max-memory-used="311296"  checker-comment="OK" >
  <program-stats-str>{ utime=53, stime=4, ptime=57, rtime=64, maxvsz=311296, maxrss=6762496, nvcsw=1, nivcsw=10 }</program-stats-str>
  <checker-stats-str>{ utime=0, stime=0, ptime=0, rtime=1, maxvsz=307200, maxrss=2387968, nvcsw=1, nivcsw=1 }</checker-stats-str>
      <input too-big="yes" original-size="523921" />
      <output size="389">44801 45501 46201 46901 47601 48301 49001 49701 50401 51101 51801 52501 53201 53901 54601 55301 56001 56701 57401 58101 58801 59501 60201 60901 61601 62301 63001 63701 64401 65101 65801 66501 67201 67901 68601 69301 70001 70701 71401 72101 72801 73501 74201 74901 75601 76301 77001 77701 78401 79101 79801 80501 81201 81901 82601 83301 84001 84701 85401 86101 86801 87501 88201 88901 89601</output>
      <correct size="390">44801 45501 46201 46901 47601 48301 49001 49701 50401 51101 51801 52501 53201 53901 54601 55301 56001 56701 57401 58101 58801 59501 60201 60901 61601 62301 63001 63701 64401 65101 65801 66501 67201 67901 68601 69301 70001 70701 71401 72101 72801 73501 74201 74901 75601 76301 77001 77701 78401 79101 79801 80501 81201 81901 82601 83301 84001 84701 85401 86101 86801 87501 88201 88901 89601
</correct>
      <stderr size="0"></stderr>
      <checker size="3">OK
</checker>
    </test>
    <test num="26" status="OK" time="43" real-time="46" max-memory-used="311296"  checker-comment="OK" >
  <program-stats-str>{ utime=32, stime=11, ptime=43, rtime=46, maxvsz=311296, maxrss=6254592, nvcsw=1, nivcsw=7 }</program-stats-str>
  <checker-stats-str>{ utime=0, stime=0, ptime=0, rtime=2, maxvsz=307200, maxrss=2387968, nvcsw=1, nivcsw=1 }</checker-stats-str>
      <input too-big="yes" original-size="349200" />
      <output sizeoutput>
      <correct size
</correct>
      <stderr size="0"></stderr>
      <checker size="3">OK
</checker>
    </test>
    <test num="27" status="OK" time="42" real-time="46" max-memory-used="311296"  checker-comment="OK" >
  <program-stats-str>{ utime=35, stime=7, ptime=42, rtime=46, maxvsz=311296, maxrss=7327744, nvcsw=1, nivcsw=7 }</program-stats-str>
  <checker-stats-str>{ utime=0, stime=1, ptime=1, rtime=2, maxvsz=307200, maxrss=2387968, nvcsw=1, nivcsw=1 }</checker-stats-str>
      <input too-big="yes" original-size="200809" />
      <output sizeoutput>
      <correct size
</correct>
      <stderr size="0"></stderr>
      <checker size="3">OK
</checker>
    </test>
    <test num="28" status="OK" time="42" real-time="47" max-memory-used="311296"  checker-comment="OK" >
  <program-stats-str>{ utime=38, stime=4, ptime=42, rtime=47, maxvsz=311296, maxrss=7368704, nvcsw=1, nivcsw=10 }</program-stats-str>
  <checker-stats-str>{ utime=0, stime=0, ptime=0, rtime=2, maxvsz=307200, maxrss=2387968, nvcsw=1, nivcsw=1 }</checker-stats-str>
      <input too-big="yes" original-size="200009" />
      <output size="54">67232 91808 97952 99488 99872 99968 99992 99998 100000</output>
      <correct size="55">67232 91808 97952 99488 99872 99968 99992 99998 100000
</correct>
      <stderr size="0"></stderr>
      <checker size="3">OK
</checker>
    </test>
    <test num="29" status="OK" time="46" real-time="49" max-memory-used="311296"  checker-comment="OK" >
  <program-stats-str>{ utime=46, stime=0, ptime=46, rtime=49, maxvsz=311296, maxrss=7409664, nvcsw=1, nivcsw=8 }</program-stats-str>
  <checker-stats-str>{ utime=13, stime=0, ptime=13, rtime=15, maxvsz=307200, maxrss=2387968, nvcsw=1, nivcsw=3 }</checker-stats-str>
      <input too-big="yes" original-size="200014" />
      <output too-big="yes" original-size="150006" />
      <correct too-big="yes" original-size="150007" />
      <stderr size="0"></stderr>
      <checker size="3">OK
</checker>
    </test>
    <test num="30" status="OK" time="66" real-time="71" max-memory-used="311296"  checker-comment="OK" >
  <program-stats-str>{ utime=66, stime=0, ptime=66, rtime=71, maxvsz=311296, maxrss=7647232, nvcsw=1, nivcsw=7 }</program-stats-str>
  <checker-stats-str>{ utime=0, stime=6, ptime=6, rtime=8, maxvsz=307200, maxrss=2387968, nvcsw=1, nivcsw=1 }</checker-stats-str>
      <input too-big="yes" original-size="600014" />
      <output too-big="yes" original-size="66678" />
      <correct too-big="yes" original-size="66679" />
      <stderr size="0"></stderr>
      <checker size="3">OK
</checker>
    </test>
  </tests>
</testing-report>
