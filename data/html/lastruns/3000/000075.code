#include <iostream>
#include <string>
#include <cstdlib>

using namespace std;

long long subhash(long long mod, long long left, long long right, long long* hash, long long* st)
{
    long long big = hash[right];
    long long small = 0;
    if (left != 0)
    {
        small = (hash[left - 1] * st[right - left + 1]) % mod;
    }
    return (big - small + mod) % mod;
}



int main()
{
    string inp, sear, concl;
    long long p = 37, mod = 1000000007;
    cin >> inp >> sear;
    long long hash1[inp.length()], hash2[sear.length()], st[inp.length()];
    hash1[0] = inp[0];
    hash2[0] = sear[0];
    st[0] = 1;
    for (long long y = 1; y < inp.length(); ++y)
    {
        st[y] = (st[y - 1] * p) % mod;
    }
    for (int i = 1; i < inp.length(); ++i)
    {
        hash1[i] = (hash1[i - 1] * p + inp[i]) % mod;
    }
    for (int i = 1; i < sear.length(); ++i)
    {
        hash2[i] = (hash2[i - 1] * p + sear[i]) % mod;
    }
    int hooker = -1, j = inp.length() - 1, length = 0;
    string help;
    for (int i = sear.length() - 1; i >= 0; --i)
    {
        if (sear[i] == inp[j])
        {
            hooker = j;
            length++;
            --j;
            help += sear[i];
        } else {
            help.clear();
            length = 0;
            j = inp.length() - 1;
        }
    }
//  cout << "length " << length << " hooker " << hooker << " main " << help << endl;
    if (inp == sear)
    {
        cout << 0;
    } else {
        if (hooker != -1)
        {
            if (subhash(mod, 0, hooker - 1, hash1, st)
            == subhash(mod, length, inp.length() - 1, hash2, st))
            {
                cout << length;
            } else {
                cout << -1;
            }
        } else {
         cout << -1;
        }
    }
    return 0;
}
