#include <bits/stdc++.h>
using namespace std;

const int inf = 1000000000;

int main() {
    
    int n, m;
	cin >> n >> m;
	vector<vector<int> > dp(n, vector<int> (m));
	vector<vector<pair<int, int> > > p(n, vector<pair<int, int> > (m));
	p[0][0] = {-1, -1};
	for (int i = 0; i<n; ++i) {
	    for (int j = 0; j<m; ++j) cin >> dp[i][j];
	}
	
	for (int i = 1; i<n; ++i) {
	    dp[i][0] += dp[i-1][0];
	    p[i][0] = {i-1, 0};
	}
	for (int i = 1; i<m; ++i) {
	    dp[0][i] += dp[0][i-1];
	    p[0][i] = {0, i-1};
	}
	
	for (int i = 1; i<n; ++i) {
	    for (int j = 1; j<m; ++j) {
            if (dp[i-1][j] > dp[i][j-1]) {
                dp[i][j] += dp[i-1][j];
    	        p[i][j] = {i-1, j};
            }
	        else {
	            dp[i][j] += dp[i][j-1];
	            p[i][j] = {i, j-1};
	        }
	    }
	}
	
	cout << dp[n-1][m-1] << endl;
	
	vector<char> path;
	int i = n-1, j = m-1;
    while (i != 0 || j != 0) {
        if (i == 0) {
            path.push_back('R');
            --j;
        }
        else {
            if (j == 0 || dp[i-1][j] > dp[i][j]) {
                path.push_back('D');
                --i;
            }
            else {
                path.push_back('R');
                --j;
            }
        }
    }
    
    for (int i = 0; i<path.size(); ++i) cout << path[i] << " ";
    
	return 0;
}