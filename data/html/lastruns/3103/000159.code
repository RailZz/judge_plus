#include <bits/stdc++.h>
using namespace std;

int cnt = 0;
vector<vector<int> > g;
vector<int> color;
bool cycle = false;

void dfs(int start, int p) {
    color[start] = 1;
    for (auto u: g[start]) {
        if (color[u] == 0) dfs(u, start);
	    else if (color[u] == 1 && p != u) cycle = true;
    }
    color[start] = 2;
}

int main() {
    
    int n, m;
	cin >> n >> m;
	g.resize(n);
	color.resize(n);
	
	for (int i = 0; i<m; ++i) {
        int u, v;
        cin >> u >> v;
        --u;
        --v;
        g[u].push_back(v);
        g[v].push_back(u);
	}
	
	for (int i = 0; i<n; ++i)
        if (color[i] == 0) {
            dfs(i, -1);
            ++cnt;
        }
    
	if (cycle == false && cnt == 1) cout << "YES";
	else cout << "NO";
	
    return 0;
}