program CellsDelete;

const
        SIZE = 100;
        d: array [1..4, 1..2] of Integer = ((1, 0), (-1, 0), (0, 1), (0, -1));
        
type
        TGraph = array [0..SIZE + 1, 0..SIZE + 1] of Char;
        TUsed = array [0..SIZE + 1, 0..SIZE + 1] of LongInt;
        
procedure Dfs (const g: TGraph; var used: TUsed; r, c: LongInt);

var
        i: LongInt;
        
begin
        used[r, c] := 1;
        
        for i := 1 to 4 do      
                if (g[r + d[i, 1], c + d[i, 2]] = '#') and (used[r + d[i, 1], c + d[i, 2]] = 0) then
                        Dfs (g, used, r + d[i, 1], c + d[i, 2])
end;
        
var
        g: TGraph;
        used: TUsed;
        n, m, i, j, cnt: LongInt;

begin
        for i := 0 to SIZE + 1 do
                for j := 0 to SIZE + 1 do
                        g[i, j] := '.';
                        
        ReadLn (n, m);
        
        for i := 1 to n do
        begin
                for j := 1 to m do
                        Read (g[i, j]);
                        
                ReadLn
        end;
        
        for i := 1 to n do
                for j := 1 to m do
                        used[i, j] := 0;
                        
        cnt := 0;
        
        for i := 1 to n do
                for j := 1 to m do
                        if (g[i, j] = '#') and (used[i, j] = 0) then
                        begin
                                Inc (cnt);
                                Dfs (g, used, i, j)
                        end;
                                
        WriteLn (cnt)
end.