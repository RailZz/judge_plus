#include <vector>
#include <iostream>

using namespace std;

vector <vector <int> > gr;
vector <int> used;

void dfs (int v, int par)
{
    used[v]++;
    for (auto u: gr[v])
    {
        if (!used[u])
        {
            dfs(u, v);
        }
        else
        {
            if (u != par)
            {
                used[u]++;
                return;
            }
        }
    }
}

int main()
{
    int n, m;
    cin >> n >> m;
    gr.resize(n);
    used.resize(n);

    int a, b;
    for (int i = 0; i < m; i++)
    {
        cin >> a >> b;
        gr[a - 1].push_back(b - 1);
        gr[b - 1].push_back(a - 1);
    }

    dfs(0, 0);

    bool flag = true;
    for (int i = 0; i < n; i++)
    {
        if (used[i] == 0 || used[i] > 1)
        {
            flag = false;
        }
    }

    if (flag)
    {
        cout << "YES";
    }
    else
    {
        cout << "NO";
    }
    return 0;
}
