#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

char field[11][11];
int used[11][11];
int k;

int dfs(int x, int y)
{
    k++;
    used[x][y] = 1;
    if(used[x + 1][y] == 0){
        dfs(x + 1, y);
    }
    if(used[x - 1][y] == 0){
        dfs(x - 1, y);
    }
    if(used[x][y + 1] == 0){
        dfs(x, y + 1);
    }
    if(used[x][y - 1] == 0){
        dfs(x, y - 1);
    }
    return k;
}

int main()
{
    int n, startx, starty;
    
    cin >> n;
    
    for (int i = 0; i <= n + 1; i++){
        for (int j = 0; j <= n + 1; j++)
        {
            used[i][j] = 2;
        }
    }
    for (int i = 1; i <= n; i++)
    {
        for (int j = 1; j <= n; j++)
        {
            cin >> field[i][j];
            if (field[i][j] == '.'){
                used[i][j] = 0;
            } else{
                used[i][j] = 2;
            }
            
        }
    }
    
    cin >> startx >> starty;
    
    k = 0;
    
    cout << dfs(startx, starty);
    
    return 0;
}