#include <iostream>
#include <vector>

using namespace std;
vector<vector<int>> g(100);
int isgood = 1;
int used[100] = {0};
void dfs(int v, int c){
    if (isgood){
       used[v] = c;
       for (auto u:g[v]){
           if (used[u] == 0){
              dfs(u, 3 - c);
           }
           else if (used [u] == c){
              isgood = 0;
           }
       }
    }

}
int main(void){
    int n, m, a, b, l;
    cin >> n >> m;
    for (int i = 0; i < m; i ++){
        cin >> a >> b;
        g[a - 1].push_back(b - 1);
        g[b - 1].push_back(a - 1);
    }
    for (int i = 0; i < n; i ++){
        if (used[i] == 0){
            used[i] = 1;
            dfs (i, 1);
        }

    }
    l = 0;
    for (int i = 0; i < n; i++){
        if (used[i] == 1){
          l++;
        }
    }
    if (isgood){
        cout << "YES \n" << l;
    }
    else {
        cout << "NO";
    }
    return 0;
}
