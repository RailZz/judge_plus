#include <iostream>
#include <vector>

using namespace std;

vector<vector<int>> vec;

/*void dfs(int v)
{
	used[v] = 1;
	for (auto &i:vec[v])
	{
		if (used[i] == 0)
		{
			dfs(i);
		}
	}
};*/

int main()
{
	int n;
	cin >> n;
	vector<vector<int>> ar(n, vector<int>(n, 0));
	for (int i = 0; i < n; i++)
	{
		for (int j = 0; j < n; j++)
		{
			cin >> ar[i][j];
		}
	}
	vec.resize(n);
	for (int i = 0; i < n; i++)
	{
		for (int j = 0; j < n; j++)
		{
			if (ar[i][j] == 1)
			{
				vec[i].push_back(j);
			}
		}
	}
	vector<int> stok(n, 0);
	vector<int> istok(n, 0);
	int i;
    int SIZE_I = vec[i].size();
    for (int i = 0; i < n; i++)
	{
        if (vec[i].size() == 0)
        {
            stok.push_back(i);
            istok.push_back(i);
        }
		for (int j = 0; j < SIZE_I; j++)
		{
            istok.push_back(vec[i][j]);
            if (vec[i][j] == i)
            {
                istok[i].erase(istok[i].begin() + j);
            }
		}
	}
    cout << istok.size() << endl;
	for (int i = 0; i < SIZE_I; i++)
    {
        cout << istok[i] << endl;
    }
    cout << stok.size() << endl;
    for (int i = 0; i < SIZE_I; i++)
    {
        cout << stok[i] << endl;
    }
	return 0;
}