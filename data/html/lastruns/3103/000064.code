#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;
vector < vector<int> > gr;
vector <int> used;
vector < vector<int>> G;
vector <int> kol;
int S=0,k=0;
void bfs (int i)
{	
	k++;
	used[i]++;
	G[S].push_back(i);	
	for (auto u: gr[i])
	{
		if (used[u]==0)
		{
			bfs(u);
		}
	}
}
int main ()
{
	int N, M, a, b;
	cin >> N >> M;
	gr.resize(N);
	used.resize(N,0);
	G.resize (N);
	for (int i=0;i<M;i++)
	{
		cin >> a >> b;
		gr[a-1].push_back(b-1);
		gr[b-1].push_back(a-1);
	}
	for (int i=0;i<N;i++)
	{
		k=0;
		if (used[i]==0)
		{
			bfs(i);
			kol.push_back(k);
			S++; 
		}
	}
	for (int i=0;i<N;i++)
	{
		sort(G[i].begin(),G[i].end());
	}
	cout << S << endl;
	for (int i=0;i<kol.size();i++)
	{
		if (kol[i]>0)
		{
			cout << kol[i] << endl;
			for (int j=0;j<G[i].size();j++)
				cout << G[i][j]+1 << " ";
			cout << endl;
		}
	}	
}
