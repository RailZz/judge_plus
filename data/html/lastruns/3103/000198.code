#include <iostream>
#include <cmath>
#include <vector>

using namespace std;

vector <vector<int>> gr;
vector <int> used;
int c;

int dfs(int v)
{
    c = 1;
    used[v] = 1;
    for (auto u: gr[v])
    {
        if (used[u] == 0) {
            dfs(u);
            c++;
        }
        
    }
    return c;
}

int main()
{
    int n, m, i;
    cin >> n >> m;
    used.resize(n + 1);
    gr.resize(n + 1);
    for (i = 0; i < m; i++){
        int k, l;
        cin >> k >> l;
        gr[k].push_back(l);
        gr[l].push_back(k);
    }
    int g = 0;
    
    for (i = 1; i <= n; i++)
    if (dfs(i) == 1) {
        g = 1;
    } else {
        g = 0;
    }
    
    if (g == 1)
    {
        cout << "YES" << endl;
    } else {
        cout << "NO" << endl;
    }
    return 0;
}