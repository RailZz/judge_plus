#include <iostream>
#include <vector>

using namespace std;
int used[100] = {0};
vector<vector<int>> g(100);
int isgood = 1;
void dfs(int v, int p){
    if (isgood == 1){
         used[v] = 1;
         for (auto u:g[v]){
            if (used[u] == 0){
                dfs(u, p);
            }
            else if (used [u] == 1 && p!= u){
                 isgood = 0;
            }
         }
    }
}

int main(void){
    int n, m, a, b;
    cin >> n >> m;
    for (int i = 0; i < m; i ++){
        cin >> a >> b;
        g[a - 1].push_back(b - 1);
        g[b - 1].push_back(a - 1);
    }
    for (int i = 0; i < n; i ++){
        if (used[i] == 0){
            used [i] = 1;
            dfs(0, i);
        }

    }
    if (isgood == 1){
        cout << "YES";
    }
    else {
        cout << "NO";
    }
    return 0;
}