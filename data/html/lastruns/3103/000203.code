#include <bits/stdc++.h>
using namespace std;

int main() {
	
	int k, n, m, u, v;
	cin >> n >> k;
	vector<int> finish(k);
	for (int i = 0; i<k; ++i) {
	    cin >> u;
	    --u;
	    finish[i] = u;
	}
	cin >> m;
	vector<vector<int> > g(n);
	for (int i = 0; i<m; ++i) {
	    cin >> u >> v;
	    --u;
	    --v;
	    g[u].push_back(v);
	    g[v].push_back(u);
	}
	vector<int> res(n, 0);
	vector<int> ans;
	
	for (int x = 0; x<n; ++x) {
	    bool a = false;
    	for (int j = 0; j<k; ++j) {
    	    if (x == finish[j]) {
    	        a = true;
    	        break;
    	    }
    	}
    	if (a == true) continue;
    	
    	queue<int> q;
    	q.push (x);
    	vector<int> dist(n);
    	vector<int> prev(n);
    	vector<bool> used(n);
    	used[x] = true;
    	prev[x] = -1;
    	while (!q.empty()) {
    		int v = q.front();
    		q.pop();
    		for (int i = 0; i<g[v].size(); ++i) {
    			int to = g[v][i];
    			if (!used[to]) {
    				used[to] = true;
    				q.push(to);
    				dist[to] = dist[v] + 1;
    				prev[to] = v;
    			}
    		}
    	}
    	
    	for (int j = 0; j<k; ++j) {
    	    vector<int> path;
    		for (int i = finish[j]; i != -1; i = prev[i])
    			path.push_back(i);
    		reverse (path.begin(), path.end());
    		ans.push_back(path.size()-1);
    		path.clear();
    	}
    	res[x] = *(min_element(ans.begin(), ans.end()));
    	ans.clear();
    	}
	
	for (int i = 0; i<n; ++i) cout << res[i] << " ";
	
	return 0;
}