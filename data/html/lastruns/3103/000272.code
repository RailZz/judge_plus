#include <iostream>
#include <vector>

using namespace std;
vector<vector<int>> ans;
vector<vector<int>> g(100);
int used[100] = {0};
void dfs(int v, int c){
    used[v] = 1;
    ans[c - 1].push_back(v);
    for (auto u:g[v]){
        if (used[u] == 0){
            dfs(u, c);
        }
    }
}
int main(void){
    int n, m, a, b, c;
    cin >> n >> m;
    for (int i = 0; i < m; i ++){
        cin >> a >> b;
        g[a - 1].push_back(b - 1);
        g[b - 1].push_back(a - 1);
    }
    c = 1;
    for (int i = 0; i < n; i++){
        if (used[i] == 0){
            ans.push_back(vector<int> ());
            dfs(i,c);
            c++;
        }
    }
    cout << ans.size()<<'\n';
    for (int i = 0; i < ans.size(); i++){
        cout << ans[i].size() << '\n';
        for (int j = 0; j < ans.size(); j++){
            cout << ans[i][j] << " ";
        }
    }
    return 0;
}