#include <bits/stdc++.h>
using namespace std;

int cnt = 0, n;
vector<vector<char> > g;
vector<vector<bool> > visited;

void dfs(int x, int y) {
    ++cnt;
    visited[x][y] = true;
    if (x > 1 && visited[x-1][y] == false) dfs(x-1, y);
    if (x < n-2 && visited[x+1][y] == false) dfs(x+1, y);
    if (y > 1 && visited[x][y-1] == false) dfs(x, y-1);
    if (y < n-2 && visited[x][y+1] == false) dfs(x, y+1);
}

int main() {
	
	int x, y;
	char c;
	cin >> n;
	g.resize(n, vector<char> (n));
	visited.resize(n, vector<bool> (n));
	for (int i = 0; i<n; ++i) {
        for (int j = 0; j<n; ++j) {
            cin >> c;
            if (c == '*') visited[i][j] = true;
        }
	}
	cin >> x >> y;
	--x;
	--y;
    
    dfs(x, y);
    
	cout << cnt;
	
	return 0;
}