#include <iostream>
#include <vector>
#include <cmath>
using namespace std;

int used[];

void dfs(int v)
{
	used[v] = 1;
	for (auto &u:vec[v])
	{
		if (used[u] == 0)
		{
			dfs(u);
		}
	}

}

int main()
{
	const int MaxN = 100;
	
	int n, s;
	cin >> n >> s;
	vector<vector<int>> ar(n, vector<int>(n, 0));
	int t1, Count;
	for (int i = 0; i < n; i++)
	{
		for (int j = 0; j < n; j++)
		{
			cin >> ar[i][j];
		}
	}
	s--;
	Count = 0;
	vector<int> vec[MaxN];
	for (int i = 0; i < n; i++)
	{
		for (int j = 0; j < n; j++)
		{
			if (ar[i][j] == 1)
			{
				vec[i].push_back(j);
			}
		}
	}
	int u;
	for (int j = 0; j < n; j++)
	{
		dfs(s);
	}
	for (int i = 0; i < MaxN;i++)
	{
		if (vec[
	}
	cout << ++Count;
	system("pause");
	return 0;
}
