#include <bits/stdc++.h>
using namespace std;

vector<vector<int> > g;
vector<bool> visited;
vector<vector<int> > comp;
vector<int> curr_comp;

void dfs(int start) {
    visited[start] = true;
    curr_comp.push_back(start);
    for (auto u : g[start])
        if (!visited[u]) dfs(u);
}

int main() {
	
	int n, m;
	cin >> n >> m;
	g.resize(n);
	visited.resize(n);
	for (int i = 0; i<m; ++i) {
    	int u, v;
    	cin >> u >> v;
    	--u;
    	--v;
    	g[u].push_back(v);
    	g[v].push_back(u);
	}
	
    int ncomp = 0;
    for (int i = 0; i<n; ++i) {
		if (!visited[i]) {
            ++ncomp;
            dfs(i);
            comp.push_back(curr_comp);
            curr_comp.clear();
        }
    }
	
	cout << ncomp << endl;
	for(int i = 0; i<comp.size(); ++i) {
	    cout << comp[i].size() << endl;
	    for(int j = 0; j<comp[i].size(); ++j) cout << comp[i][j]+1 << " ";
	    cout << endl;
	}
	
	return 0;
}