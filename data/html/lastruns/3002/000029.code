#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

vector<int> mass;
vector<vector<int>> demo_gr, beta_gr, gr;
vector<int> used;
vector<int> comp_arr;
long long SUPERTIME = 0;

void component(int v) {
    used[v] = 1;
    SUPERTIME += mass[v];
    for (int u : demo_gr[v]) {
        if (!used[u]) {
            component(u);
        }
    }
    comp_arr.push_back(v);
}

int main() {
    int n;
    cin >> n;
    mass.resize(n);
    demo_gr.resize(n);
    beta_gr.resize(n);
    used.resize(n, 0);
    for (int i = 0; i < n; i++) {
        cin >> mass[i];
    }
    for (int i = 0; i < n; i++) {
        int col, need;
        cin >> col;
        for (int j = 0; j < col; j++) {
            cin >> need;
            demo_gr[i].push_back(need - 1);
        }
    }
    /*for (int i = 0; i < n; i++) {
        cout << i << '|';
        for (int j = 0; j < demo_gr[i].size(); j++) {
            cout << demo_gr[i][j] << ' ';
        }
        cout << endl;
    }*/
    component(0);
    cout << SUPERTIME << ' ' << comp_arr.size() << endl;
    for (int i = 0; i < comp_arr.size(); i++) {
        cout << comp_arr[i] + 1 << ' ';
    }
}
