Content-type: text/xml

<?xml version="1.0" encoding="utf-8"?>
<testing-report run-id="219" judge-id="7" status="OK" scoring="ACM" run-tests="9" contest-id="3204" real-time-available="yes" max-memory-used-available="yes" correct-available="yes" time-limit-ms="2000" real-time-limit-ms="5000" marked-flag="no" >
  <uuid>cba7967e-c497-4d3d-a417-d1681712ead7</uuid>
  <host>localhost.localdomain</host>
  <cpu-model>Intel(R) Pentium(R) CPU 3550M @ 2.30GHz</cpu-model>
  <cpu-mhz>2294.738</cpu-mhz>
  <compiler_output>000219.cpp: In function 'int main()':
000219.cpp:11:19: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
  for(int i = 0; i &lt; a.size();++i){
                   ^
000219.cpp:19:20: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
   for(int i = 1; i &lt; a.size(); ++i){
                    ^
000219.cpp:33:19: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
  for(int i = 0; i &lt; a.size(); i++){
                   ^
</compiler_output>
  <tests>
    <test num="1" status="OK" time="1" real-time="3" max-memory-used="307200"  checker-comment="OK" >
  <program-stats-str>{ utime=0, stime=1, ptime=1, rtime=3, maxvsz=307200, maxrss=2838528, nvcsw=1, nivcsw=1 }</program-stats-str>
  <checker-stats-str>{ utime=0, stime=0, ptime=0, rtime=2, maxvsz=307200, maxrss=2387968, nvcsw=1, nivcsw=1 }</checker-stats-str>
      <input size="10">3 4 5 2 1
</input>
      <output size="10">3 4 1 2 5 </output>
      <correct size="11">3 4 1 2 5 
</correct>
      <stderr size="10">3 4 5 2 1 </stderr>
      <checker size="3">OK
</checker>
    </test>
    <test num="2" status="OK" time="1" real-time="2" max-memory-used="307200"  checker-comment="OK" >
  <program-stats-str>{ utime=0, stime=1, ptime=1, rtime=2, maxvsz=307200, maxrss=2908160, nvcsw=1, nivcsw=1 }</program-stats-str>
  <checker-stats-str>{ utime=0, stime=0, ptime=0, rtime=2, maxvsz=307200, maxrss=2387968, nvcsw=1, nivcsw=1 }</checker-stats-str>
      <input size="10">1 5 4 3 2
</input>
      <output size="10">5 1 4 3 2 </output>
      <correct size="11">5 1 4 3 2 
</correct>
      <stderr size="10">1 5 4 3 2 </stderr>
      <checker size="3">OK
</checker>
    </test>
    <test num="3" status="OK" time="1" real-time="2" max-memory-used="307200"  checker-comment="OK" >
  <program-stats-str>{ utime=0, stime=1, ptime=1, rtime=2, maxvsz=307200, maxrss=2912256, nvcsw=1, nivcsw=1 }</program-stats-str>
  <checker-stats-str>{ utime=1, stime=0, ptime=1, rtime=2, maxvsz=307200, maxrss=2387968, nvcsw=1, nivcsw=2 }</checker-stats-str>
      <input size="13">-30000 30000
</input>
      <output size="13">30000 -30000 </output>
      <correct size="14">30000 -30000 
</correct>
      <stderr size="13">-30000 30000 </stderr>
      <checker size="3">OK
</checker>
    </test>
    <test num="4" status="OK" time="2" real-time="3" max-memory-used="307200"  checker-comment="OK" >
  <program-stats-str>{ utime=0, stime=2, ptime=2, rtime=3, maxvsz=307200, maxrss=2904064, nvcsw=1, nivcsw=1 }</program-stats-str>
  <checker-stats-str>{ utime=0, stime=0, ptime=0, rtime=1, maxvsz=307200, maxrss=2387968, nvcsw=1, nivcsw=1 }</checker-stats-str>
      <input size="211">1 -1010 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 -1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 15 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 30000 
</input>
      <output size="210">1 30000 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 -1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 15 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 -1010 </output>
      <correct size="211">1 30000 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 -1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 15 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 -1010 
</correct>
      <stderr size="210">1 -1010 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 -1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 15 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 30000 </stderr>
      <checker size="3">OK
</checker>
    </test>
    <test num="5" status="OK" time="1" real-time="2" max-memory-used="307200"  checker-comment="OK" >
  <program-stats-str>{ utime=0, stime=1, ptime=1, rtime=2, maxvsz=307200, maxrss=2904064, nvcsw=1, nivcsw=1 }</program-stats-str>
  <checker-stats-str>{ utime=0, stime=0, ptime=0, rtime=1, maxvsz=307200, maxrss=2387968, nvcsw=1, nivcsw=1 }</checker-stats-str>
      <input size="2">1
</input>
      <output size="2">1 </output>
      <correct size="3">1 
</correct>
      <stderr size="2">1 </stderr>
      <checker size="3">OK
</checker>
    </test>
    <test num="6" status="OK" time="1" real-time="2" max-memory-used="307200"  checker-comment="OK" >
  <program-stats-str>{ utime=0, stime=1, ptime=1, rtime=2, maxvsz=307200, maxrss=2912256, nvcsw=1, nivcsw=1 }</program-stats-str>
  <checker-stats-str>{ utime=0, stime=0, ptime=0, rtime=1, maxvsz=307200, maxrss=2387968, nvcsw=1, nivcsw=2 }</checker-stats-str>
      <input size="23">2147483647 -2147483648
</input>
      <output size="23">-2147483648 2147483647 </output>
      <correct size="24">-2147483648 2147483647 
</correct>
      <stderr size="23">2147483647 -2147483648 </stderr>
      <checker size="3">OK
</checker>
    </test>
    <test num="7" status="OK" time="1" real-time="2" max-memory-used="307200"  checker-comment="OK" >
  <program-stats-str>{ utime=0, stime=1, ptime=1, rtime=2, maxvsz=307200, maxrss=2899968, nvcsw=1, nivcsw=1 }</program-stats-str>
  <checker-stats-str>{ utime=0, stime=0, ptime=0, rtime=2, maxvsz=307200, maxrss=2387968, nvcsw=1, nivcsw=1 }</checker-stats-str>
      <input size="57">1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 17 16 15 14
</input>
      <output size="57">18 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 1 17 16 15 14 </output>
      <correct size="58">18 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 1 17 16 15 14 
</correct>
      <stderr size="57">1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 17 16 15 14 </stderr>
      <checker size="3">OK
</checker>
    </test>
    <test num="8" status="OK" time="1" real-time="3" max-memory-used="307200"  checker-comment="OK" >
  <program-stats-str>{ utime=0, stime=1, ptime=1, rtime=3, maxvsz=307200, maxrss=2908160, nvcsw=1, nivcsw=1 }</program-stats-str>
  <checker-stats-str>{ utime=0, stime=0, ptime=0, rtime=2, maxvsz=307200, maxrss=2387968, nvcsw=1, nivcsw=2 }</checker-stats-str>
      <input size="21">1 2 3 4 5 6 7 8 9 10
</input>
      <output size="21">10 2 3 4 5 6 7 8 9 1 </output>
      <correct size="22">10 2 3 4 5 6 7 8 9 1 
</correct>
      <stderr size="21">1 2 3 4 5 6 7 8 9 10 </stderr>
      <checker size="3">OK
</checker>
    </test>
    <test num="9" status="OK" time="1" real-time="2" max-memory-used="307200"  checker-comment="OK" >
  <program-stats-str>{ utime=0, stime=1, ptime=1, rtime=2, maxvsz=307200, maxrss=2838528, nvcsw=1, nivcsw=1 }</program-stats-str>
  <checker-stats-str>{ utime=0, stime=0, ptime=0, rtime=1, maxvsz=307200, maxrss=2387968, nvcsw=1, nivcsw=2 }</checker-stats-str>
      <input size="21">10 9 8 7 6 5 4 3 2 1
</input>
      <output size="21">1 9 8 7 6 5 4 3 2 10 </output>
      <correct size="22">1 9 8 7 6 5 4 3 2 10 
</correct>
      <stderr size="21">10 9 8 7 6 5 4 3 2 1 </stderr>
      <checker size="3">OK
</checker>
    </test>
  </tests>
</testing-report>
