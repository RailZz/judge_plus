#include <iostream>
#include <vector>
#include <algorithm>
#include <set>

using namespace std;

int main() {
    int n, start, finish;
    cin >> n >> start >> finish;
    start--;
    finish--;
    vector<vector<pair<int, int>>> gr(n);
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            int weight;
            cin >> weight;
            if (weight >= 0 && i != j) {
                gr[i].push_back({weight, j});
            }
        }
    }
    vector<int> d(n, 2009000999);
    set<pair<int, int>> s;
    vector<int> parent(n, -1);
    d[start] = 0;
    s.insert({0, start});
    while (!s.empty()) {
        int v = s.begin()->second;
        s.erase(s.begin());
        for (auto ul : gr[v]) {
            int u = ul.second;
            int l = ul.first;
            if (d[v] + l < d[u]) {
                s.erase({d[u], u});
                d[u] = d[v] + l;
                s.insert({d[u], u});
                parent[u] = v;
            }
        }
    }
    vector<int> ans;
    while (finish != -1) {
        ans.push_back(finish);
        finish = parent[finish];
    }
    reverse(ans.begin(), ans.end());
    for (int i = 0; i < ans.size(); i++) {
        cout << ans[i] + 1 << ' ';
    }
}
