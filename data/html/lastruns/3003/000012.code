#include <iostream>
#include <vector>
#include <algorithm>
#include <set>

using namespace std;

int main() {
    int n;
    cin >> n;
    vector<int> mass(n);
    for (int i = 0; i < n; i++) {
        cin >> mass[i];
    }
    int start, finish;
    start = 0;
    finish = n - 1;
    vector<vector<pair<int, int>>> gr(n);
    int m;
    cin >> m;
    for (int i = 0; i < m; i++) {
        int st, fin;
        cin >> st >> fin;
        st--;
        fin--;
        gr[st].push_back({mass[st], fin});
        gr[fin].push_back({mass[fin], st});
    }
    vector<int> d(n, 2009000999);
    set<pair<int, int>> s;
    d[start] = 0;
    s.insert({0, start});
    while (!s.empty()) {
        int v = s.begin()->second;
        s.erase(s.begin());
        for (auto ul : gr[v]) {
            int u = ul.second;
            int l = ul.first;
            if (d[v] + l < d[u]) {
                s.erase({d[u], u});
                d[u] = d[v] + l;
                s.insert({d[u], u});
            }
        }
    }
    if (d[finish] == 2009000999) {
        cout << -1;
        return 0;
    }
    cout << d[finish];
}
