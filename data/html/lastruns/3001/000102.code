#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

vector<int> t;
vector<int> arr;

int Find(int v, int l, int r, int k) {
    if (l == r - 1) {
        return l;
    }
    int m = (l + r) / 2;
    if (t[v * 2 + 1] > k) {
        return Find(v * 2 + 1, l, m, k);
    }
    return Find(v * 2 + 2, m, r, k - t[v * 2 + 1]);
}

void bild(int v, int l, int r) {
    if (l == r - 1) {
        if (arr[l]) {
            t[v] = 0;
            return;
        }
        t[v] = 1;
        return;
    }
    int m = (r + l) / 2;
    bild(v * 2 + 1, l, m);
    bild(v * 2 + 2, m, r);
    t[v] = t[v * 2 + 1] + t[v * 2 + 2];
}

int ask(int v, int l, int r, int askl, int askr) {
    if (askl >= r || askr <= l) {
        return 0;
    }
    if (askl <= l && askr >= r) {
        return t[v];
    }
    int m = (r + l) / 2;
    return ask(v * 2 + 1, l, m, askl, askr) + ask(v * 2 + 2, m, r, askl, askr);
}

void change(int v, int l, int r, int pos, int val) {
    if (l == r - 1) {
        arr[l] = val;
        if (!val) {
            t[v] = 1;
        } else {
            t[v] = 0;
        }
        return;
    }
    int m = (l + r) / 2;
    if (pos < m) {
        change(v * 2 + 1, l, m, pos, val);
    } else {
        change(v * 2 + 2, m, r, pos, val);
    }
    t[v] = t[v * 2 + 1] + t[v * 2 + 2];
}

int main() {
    int n;
    cin >> n;
    arr.resize(n);
    for (int i = 0; i < n; i++) {
        cin >> arr[i];
    }
    arr.push_back(-1);
    t.resize(n * 4);
    bild(0, 0, n);
    int par1, par2;
    char comand;
    int col_ask;
    cin >> col_ask;
    int k;
    for (int i = 0; i < col_ask; i++) {
        cin >> comand >> par1 >> par2;
        par1--;
        if (comand == 's') {
            cin >> k;
            k--;
            if (k + 1 > ask(0, 0, n, par1, par2)){
                cout << -1 << ' ';
                continue;
            }
            if (par1 != 0) {
                k += ask(0, 0, n, 0, par1) << ' ';
            }
            //cout << "K " << k << endl;
            int res = Find(0, 0, n, k);
            cout << res + 1 << ' ';
        } else {
            change(0, 0, n, par1, par2);
        }
    }
}
