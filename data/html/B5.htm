<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"> <html><!--
 Archive processed by SingleFile 
 url: https://informatics.msk.ru/mod/statements/print3.php?id=33424 
 saved date: Wed Aug 22 2018 21:18:01 GMT+0300 (MSK) 
--><meta charset=utf-8>
<title>Параллель B. Остовные деревья </title>
<style>.problem-statement { margin: 0.5em; font-family: verdana; line-height: 1.5em; font-size: 14px; }.problem-statement p { margin: 0px 0px 1em; }.problem-statement ul { list-style: disc inside; }.problem-statement .legend { margin-bottom: 1em; }.problem-statement .section-title { font-family: arial; font-size: 115%; font-weight: bold; }.problem-statement .output-specification { margin-bottom: 1em; }.problem-statement .sample-tests .input, .problem-statement .sample-tests .output { border: 1px solid rgb(136, 136, 136); }.problem-statement .sample-tests .output { margin-bottom: 1em; position: relative; top: -1px; }.problem-statement .sample-tests pre { line-height: 1.25em; padding: 0.25em; margin: 0px; background-color: rgb(239, 239, 239); }.problem-statement .sample-tests .title { font-family: arial; padding: 0.25em; border-bottom: 1px solid rgb(136, 136, 136); text-transform: lowercase; font-weight: bold; }.problem-statement .tex-span { font-size: 125%; font-family: "times new roman"; }.problem-statement .tex-font-style-tt { font-size: 110%; font-family: "courier new"; }</style>
<meta name=description content="Параллель B. Остовные деревья ">
<style>h1, h2, h3, h4, h5, h6 { margin-left: 0px; font-family: "Times New Roman", Times, serif; break-after: avoid; break-inside: avoid; }.statements_title { margin-left: -40px; font-family: Tahoma, Verdana, Arial, Helvetica, sans-serif; font-size: 3em; font-weight: bold; margin-top: 120px; margin-bottom: 30px; text-align: center; }.statements_summary { margin-left: -40px; text-align: center; margin-bottom: 120px; }.statements_chapter_title { font-family: Tahoma, Verdana, Arial, Helvetica, sans-serif; text-align: left; font-size: 1.7em; font-weight: bold; border-style: solid; border-width: 0px 0px 1px; margin-left: 0px; margin-bottom: 20px; }.statements_chapter { break-before: page; }body { margin-left: 50px; margin-right: 10px; color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); font-family: "Times New Roman", Times, serif; font-size: 1em; font-weight: normal; text-decoration: none; }</style>
<link type=image/x-icon rel="shortcut icon" href=data:image/x-icon;base64,></head> <body> <a name=top></a> <p class=statements_title>Параллель B. Остовные деревья </p> <p class=statements_summary></p>  <div class=statements_toc_alpha><a name=toc></a><p class=statements_chapter_title>Список задач<ul><li><a href=#ch1377><b>Задача A.</b> Остовное дерево</a><li><a href=#ch1362><b>Задача B.</b> Острова</a><li><a href=#ch111756><b>Задача C.</b> Разрезание графа</a><li><a href=#ch1316><b>Задача D.</b> Школы</a></ul></div><hr><div class=statements_chapter><h1><a name=ch1377>Остовное дерево</a></h1><p class=statements_chapter_title><b>Задача A.</b> Остовное дерево<div class=problem-statement> <div class=legend> <p>Требуется найти в связном графе остовное дерево минимально веса. </p> </div> <div class=input-specification> <div class=section-title> Входные данные </div> <p>Первая строка входного файла содержит два натуральных числа n и m - количество вершин и ребер графа соответственно (1≤n≤20000, 0≤m≤100000). Следующие m строк содержат описание ребер по одному на строке. Ребро номер i описывается тремя натуральными числами b<sub>i</sub>, e<sub>i</sub> и w<sub>i</sub> - номера концов ребра и его вес соответственно (1≤b<sub>i</sub>,e<sub>i</sub>≤n, 0≤w<sub>i</sub>≤100000).</p> <p>Граф является связным.</p> </div> <div class=output-specification> <div class=section-title> Выходные данные </div> <p>Выведите единственное целое число - вес минимального остовного дерева.</p> </div> </div>
<div class=problem-statement><div class=sample-tests><div class=section-title>Примеры</div><div class=sample-test><div class=input><div class=title>Входные данные</div><pre class=content>4 4
1 2 1
2 3 2
3 4 5
4 1 4
</pre></div><div class=output><div class=title>Выходные данные</div><pre class=content>7
</pre></div></div></div></div></div><hr><div class=statements_chapter><h1><a name=ch1362>Острова</a></h1><p class=statements_chapter_title><b>Задача B.</b> Острова<div class=problem-statement> <div class=legend> <p>Одно разбросанное на островах Океании государство решило создать сеть автомобильных дорог (вернее, мостов). По каждому мосту можно перемещаться в обе стороны. Был разработан план очередности строительства мостов и известно, что после постройки всех мостов можно будет проехать по ним с каждого острова на каждый (возможно, через некоторые промежуточные острова).</p> <p>Однако, этот момент может наступить до того, как будут построены все мосты. Ваша задача состоит в нахождении такого минимального количества мостов, после постройки которого (в порядке строительства по плану) можно будет попасть с любого острова на любой другой.</p> </div> <div class=input-specification> <div class=section-title> Входные данные </div> <p>Первая строка содержит два числа: <span>N</span> - число островов (1 ≤ <span>N</span> ≤ 100<span>&nbsp;</span>000) и <span>M</span> – количество мостов в плане (1 ≤ <span>M</span> ≤ 200<span>&nbsp;</span>000). В каждой следующей строке содержится описание моста – два числа <span>x</span> и <span>y</span> (0 ≤ <span>x</span>, <span>y</span> &lt; <span>N</span>) – номера соединяемых островов.</p> </div> <div class=output-specification> <div class=section-title> Выходные данные </div> <p>Выведите в выходной файл одно<em> </em>число – минимальное количество построенных мостов, по которым можно попасть с любого острова на любой.</p> </div> </div> <div class=problem-statement><div class=sample-tests><div class=section-title>Примеры</div><div class=sample-test><div class=input><div class=title>Входные данные</div><pre class=content>4 5
0 1
0 2
1 2
2 3
3 0</pre></div><div class=output><div class=title>Выходные данные</div><pre class=content>4</pre></div></div></div></div></div><hr><div class=statements_chapter><h1><a name=ch111756>Разрезание графа</a></h1><p class=statements_chapter_title><b>Задача C.</b> Разрезание графа<div class=problem-statement><div class=legend><p>Дан неориентированный граф. Над ним в заданном порядке производят операции следующих двух типов:<p><ul type=disc> <li> <span class=tex-font-style-tt>cut</span> — разрезать граф, то есть удалить из него ребро; <li> <span class=tex-font-style-tt>ask</span> — проверить, лежат ли две вершины графа в одной компоненте связности. </ul><p><p>Известно, что после выполнения всех операций типа <span class=tex-font-style-tt>cut</span> рёбер в графе не осталось. Найдите результат выполнения каждой из операций типа <span class=tex-font-style-tt>ask</span>.</p></div><p><p><div class=input-specification><div class=section-title>Входные данные</div><p><p>Первая строка входного файла содержит три целых числа, разделённые пробелами&nbsp;— количество вершин графа <span class=tex-span><i>n</i></span>, количество рёбер <span class=tex-span><i>m</i></span> и количество операций <span class=tex-span><i>k</i></span> (<span class=tex-span>1 ≤ <i>n</i> ≤ 50 000</span>, <span class=tex-span>0 ≤ <i>m</i> ≤ 100 000</span>, <span class=tex-span><i>m</i> ≤ <i>k</i> ≤ 150 000</span>).<p>Следующие <span class=tex-span><i>m</i></span> строк задают рёбра графа; <span class=tex-span><i>i</i></span>-я из этих строк содержит два числа <span class=tex-span><i>u</i><sub class=lower-index><i>i</i></sub></span> и&nbsp;<span class=tex-span><i>v</i><sub class=lower-index><i>i</i></sub></span> (<span class=tex-span>1 ≤ <i>u</i><sub class=lower-index><i>i</i></sub>, <i>v</i><sub class=lower-index><i>i</i></sub> ≤ <i>n</i></span>), разделённые пробелами&nbsp;— номера концов <span class=tex-span><i>i</i></span>-го ребра. Вершины нумеруются с&nbsp;единицы; граф не&nbsp;содержит петель и&nbsp;кратных рёбер.<p>Далее следуют <span class=tex-span><i>k</i></span>&nbsp;строк, описывающих операции. Операция типа <span class=tex-font-style-tt>cut</span> задаётся строкой «<span class=tex-font-style-tt>cut <span class=tex-span><i>u</i></span> <span class=tex-span><i>v</i></span></span>» (<span class=tex-span>1 ≤ <i>u</i>, <i>v</i> ≤ <i>n</i></span>), которая означает, что из&nbsp;графа удаляют ребро между вершинами <span class=tex-span><i>u</i></span> и&nbsp;<span class=tex-span><i>v</i></span>. Операция типа <span class=tex-font-style-tt>ask</span> задаётся строкой «<span class=tex-font-style-tt>ask <span class=tex-span><i>u</i></span> <span class=tex-span><i>v</i></span></span>» (<span class=tex-span>1 ≤ <i>u</i>, <i>v</i> ≤ <i>n</i></span>), которая означает, что необходимо узнать, лежат&nbsp;ли в&nbsp;данный момент вершины <span class=tex-span><i>u</i></span> и&nbsp;<span class=tex-span><i>v</i></span> в&nbsp;одной компоненте связности. Гарантируется, что каждое ребро графа встретится в операциях типа <span class=tex-font-style-tt>cut</span> ровно один раз.</p></div><p><p><div class=output-specification><div class=section-title>Выходные данные</div><p><p>Для каждой операции <span class=tex-font-style-tt>ask</span> во входном файле выведите на&nbsp;отдельной строке слово «<span class=tex-font-style-tt>YES</span>», если две указанные вершины лежат в&nbsp;одной компоненте связности, и «<span class=tex-font-style-tt>NO</span>» в&nbsp;противном случае. Порядок ответов должен соответствовать порядку операций <span class=tex-font-style-tt>ask</span> во&nbsp;входном файле.</p></div><p><p></p></div><div class=problem-statement><div class=sample-tests><div class=section-title>Примеры</div><div class=sample-test><div class=input><div class=title>Входные данные</div><pre class=content>3 3 7
1 2
2 3
3 1
ask 3 3
cut 1 2
ask 1 2
cut 1 3
ask 2 1
cut 2 3
ask 3 1
</pre></div><div class=output><div class=title>Выходные данные</div><pre class=content>YES
YES
NO
NO
</pre></div></div></div></div></div><hr><div class=statements_chapter><h1><a name=ch1316>Школы</a></h1><p class=statements_chapter_title><b>Задача D.</b> Школы<div class=problem-statement> <div class=legend> <p>С целью подготовки к проведению олимпиады по информатике мэр решил обеспечить надежным электроснабжением все школы города. Для этого необходимо провести линию электропередач от альтернативного источника электроэнергии “Майбуття” к одной из школ города (к какой неважно), а также соединить линиямии электропередач некоторые школы между собой.</p> <p>Считается, что школа имеет надежное электроснабжение, если она напрямую связана с источником “Майбуття”, либо с одной из тех школ, которые имеют надежное электроснабжение.</p> <p>Известна стоимость соединения между некоторыми парами школ. Мэр города решил выбрать одну из двух наиболее экономичных схем электроснабжения (стоимость схемы равняется сумме стоимостей соединений пар школ).</p> <p>Напишите программу, которая вычисляет стоимость двух наиболее экономных схем альтернативного электроснабжения школ.</p> </div> <div class=input-specification> <div class=section-title> Входные данные </div> <p>В первой строке входного файла находятся два натуральных числа, разделенных пробелом:<em>N</em> (3 ≤ <em>N</em> ≤ 100), количество школ в городе, и <em>M</em> – количество возможных соединений между ними. В каждой из последующих <em>M</em> строк находятся по три числа: <em>A</em><sub><em>i</em></sub>, <em>B</em><sub><em>i</em></sub>, <em>C</em><sub><em>i</em></sub>, разделенных пробелами, где <em>C</em><sub><em>i</em></sub> – стоимость прокладки линии электроснабжения (1 ≤ <em>C</em><sub><em>i</em></sub> ≤ 300) от школы <em>A</em><sub><em>i</em></sub> до школы <em>B</em><sub><em>i</em></sub> (<em>i=1,2,…,N</em>). </p> </div> <div class=output-specification> <div class=section-title> Выходные данные </div> <p>В единственной строке выходного файла должны содержаться два натуральных числа <em>S</em><sub><em>1</em></sub> и <em>S</em><sub><em>2</em></sub>, разделенных пробелом – две наименьшие стоимости схем (<em>S</em><sub><em>1</em></sub><em> ≤ </em><em>S</em><sub><em>2</em></sub>). <em>S</em><sub><em>1</em></sub>=<em>S</em><sub><em>2</em></sub> тогда и только тогда, когда существует несколько схем надежного электроснабжения наименьшей стоимости.</p> <p>Гарантируется, что для входных данных существует две различные схемы надёжного электроснабжения.</p> </div> </div>
<div class=problem-statement><div class=sample-tests><div class=section-title>Примеры</div><div class=sample-test><div class=input><div class=title>Входные данные</div><pre class=content>5 8
1 3 75
3 4 51
2 4 19
3 2 95
2 5 42
5 4 31
1 2 9
3 5 66
</pre></div><div class=output><div class=title>Выходные данные</div><pre class=content>110 121
</pre></div></div></div></div></div> <autoscroll></autoscroll>